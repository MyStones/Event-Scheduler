@model MVCFinal.Models.Event

@{
    ViewBag.Title = "EditEvent";
    @RenderPage("~/Views/Event/NavBar.cshtml")
    @Styles.Render("~/CSS/AddandEdit.css")
}


<style>
    body {
        background: #495059;
    }

    h1{
        text-align: center;
    }

    .form-group {
        padding: 10px;
    }

    .form {
        align-items: flex-end;
        font-size: 25px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin-left:100px;
    }

    .save {
        width: 80px;
        height: 40px;
        font-size: 20px;
    }

    .back {
        width: 80px;
        height: 40px;
        font-size: 20px;
        color: red;
        margin-left:10px;
    }

    .error {
        font-family: Arial;
    }

    .card {
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
        transition: 0.3s;
        margin: auto;
        margin-top: 200px;
        border-radius: unset;
        height: 500px;
        width: 600px;
        background-color: cornsilk;
    }

        .card:hover {
            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
        }

    .container {
        padding: 2px 20px;
    }

    span {
        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
        font-size: 17px;
        color: red;
    }

    .fields {
        align-content: center;
    }
    .des {
        width: 190px;
        height: 32px;
        font-size: 20px;
        margin-left: 20px;
    }

    .date {
        width: 190px;
        height: 32px;
        font-size: 17px;
        margin-left: 25px;
    }

    .dur {
        width: 190px;
        height: 32px;
        font-size: 20px;
        margin-left: 44px;
    }

    .form-button {
        margin-left: 200px;
    }

    .evn {
        width: 190px;
        height: 32px;
        font-size: 20px;
        margin-left: 15px;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="card">
            
            <div class="container">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.EventId)
                <h1 style="font-size:40px;">Edit Event</h1>
                <div class="form">
                    <div class="fields">
                        <p>
                            <b>Event Name:</b>  @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "evn" } })
                            <span> @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })</span>
                        </p>
                        @if (ViewBag.Failed != null)
                        {
                            <p class="error">@ViewBag.Failed</p>
                        }
                    </div>
                </div>

                <div class="form">
                    <div class="fields">
                        <p>
                            <b>Description:</b>
                            <span style="margin-left:25px">
                                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "des" } })
                            </span>
                            <span>@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })</span>
                        </p>
                    </div>
                </div>

                <div class="form">
                    <div class="fields">
                        <p>
                            <b>Event Date:</b>  @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "date" } })
                            <span> @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })</span>
                        </p>
                    </div>
                </div>



                <div class="form">
                    <div class="fields">
                        <p>
                            <b>Duration:</b>  @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "dur" } }) Hrs
                            <span> @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })</span>
                        </p>
                    </div>
                </div>

                <div class="form-button">
                    <div>
                        <input type="submit" value="Save" class="save" />
                        <button class="back" type="button" onclick="location.href='@Url.Action("GetEventList", "Event")'"> Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

